#pragma once

/*#define FPI (3.141592653589793238462643383279502884197169399375105f)
#define FPI2 (3.141592653589793238462643383279502884197169399375105f*2.0f) 
#define FPI_2 (3.141592653589793238462643383279502884197169399375105f/2.0f)

#define M_PI (3.141592653589793238462643383279502884197169399375105)
#define M_PI2 (3.141592653589793238462643383279502884197169399375105*2.0) 
#define M_PI_2 (3.141592653589793238462643383279502884197169399375105/2.0)

#define FE 2.71828182845904523536028747135266249775724709369995f
#define M_E 2.71828182845904523536028747135266249775724709369995*/

const float kFPI   = 3.141592653589793238462643383279502884197169399375105f;
const float kFPI2  = 3.141592653589793238462643383279502884197169399375105f*2.0f;
const float kFPI_2 = 3.141592653589793238462643383279502884197169399375105f/2.0f;

const double kM_PI   = 3.141592653589793238462643383279502884197169399375105;
const double kM_PI2  = 3.141592653589793238462643383279502884197169399375105*2.0;
const double kM_PI_2 = 3.141592653589793238462643383279502884197169399375105/2.0;

const float  kFE  = 2.71828182845904523536028747135266249775724709369995f;
const double kM_E = 2.71828182845904523536028747135266249775724709369995;

inline double deg2rad(double deg)
{
	return deg/180.0*kM_PI;
}

inline float deg2rad(float deg)
{
	return deg/180.f*kFPI;
}

inline double rad2deg(double rad)
{
	return rad*180.0/kM_PI;
}

inline float rad2deg(float rad)
{
	return rad*180.f/kFPI;
}
